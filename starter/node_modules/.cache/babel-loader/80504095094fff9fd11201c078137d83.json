{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]); // load books at first DOM render:\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []); // const updateShelf = (book, shelf) => {\n  //   const update = async () => {\n  //     const res = await BooksAPI.update(book, shelf);\n  //     setBooks(books.concat(res));\n  //   }\n  //   //invoke to update the book\n  //   update();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListBooks, {\n        books: books,\n        onUpdateBook: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {\n        books: books,\n        onUpdateBook: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js"],"names":["BooksAPI","Route","Routes","useState","useEffect","ListBooks","Search","App","books","setBooks","getBooks","res","getAll","updateShelf"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADa,CAKb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,MAAT,EAAlB;AACAH,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT,CANa,CAcb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBAEE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AACE,MAAA,OAAO,eACL,QAAC,SAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,YAAY,EAAEK;AAFhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AACE,MAAA,OAAO,eACL,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEL,KAAf;AAAsB,QAAA,YAAY,EAAEK;AAApC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAiBD;;GAzCQN,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n\n\n  // load books at first DOM render:\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    }\n    getBooks();\n  }, [])\n\n  // const updateShelf = (book, shelf) => {\n  //   const update = async () => {\n  //     const res = await BooksAPI.update(book, shelf);\n  //     setBooks(books.concat(res));\n  //   }\n  //   //invoke to update the book\n  //   update();\n\n  // };\n\n  return (\n\n    <Routes>\n      <Route exact path=\"/\"\n        element={\n          <ListBooks\n            books={books}\n            onUpdateBook={updateShelf}\n             />}\n      />\n      <Route path=\"/Search\"\n        element={\n          <Search books={books} onUpdateBook={updateShelf} />}\n      />\n    </Routes>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}