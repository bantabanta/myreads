{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    //logic for getting / setting contacts (could use promise or async/await)\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    }; // invoke the logic to get the contacts on first render:\n\n\n    getBooks();\n  }, []);\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-contacts\",\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [query !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showing-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Now showing \", 12, \" results for \", query]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearQuery(),\n          children: \"Show All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"test1\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [console.log(books[0]), books[0][author]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"D1sOuR89VSIhJt3GUzPFOERomhE=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/Search.js"],"names":["Link","useState","useEffect","BooksAPI","Search","query","setQuery","books","setBooks","getBooks","res","getAll","updateQuery","trim","clearQuery","event","target","value","console","log","author"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMO,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,MAAT,EAAlB;AACAH,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,KAHD,CAFc,CAMd;;;AACAD,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,WAAW,GAAIP,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAK,CAACQ,IAAN,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,kCAHd;AAIE,UAAA,KAAK,EAAEP,KAJT;AAKE,UAAA,QAAQ,EAAGU,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBAEIZ,KAAK,KAAK,EAAV,iBACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,qCACe,EADf,mBACgCA,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAMS,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,eAWE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BA+BE;AAAA,2CACE;AAAA,uBACGI,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAAC,CAAD,CAAjB,CADH,EAEGA,KAAK,CAAC,CAAD,CAAL,CAASa,MAAT,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoED,CA1FD;;GAAMhB,M;;KAAAA,M;AA4FN,eAAeA,MAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nconst Search = () => {\n  const [query, setQuery] = useState('');\n  const [books, setBooks] = useState([]);\n\n  useEffect(() => {\n    //logic for getting / setting contacts (could use promise or async/await)\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    }\n    // invoke the logic to get the contacts on first render:\n    getBooks();\n  }, [])\n\n  const updateQuery = (query) => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\" >\n          Back to Home\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            className=\"search-contacts\"\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        {\n          query !== '' && (\n            <div className=\"showing-books\">\n              <span>\n                Now showing {12} results for {query}\n              </span>\n              <button onClick={() => clearQuery()}>Show All</button>\n            </div>\n          )\n        }\n        <ol className=\"books-grid\">\n          {/* <li>\n            <div className=\"book\">\n              <div className=\"book-top\">\n                <div\n                  className=\"book-cover\"\n                  style={{\n                    width: 128,\n                    height: 192,\n                    backgroundImage:\n                      'url(\"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\")',\n                  }}\n                ></div>\n                <div className=\"book-shelf-changer\">\n                  <select>\n                    <option value=\"none\" disabled>\n                      Move to...\n                    </option>\n                    <option value=\"currentlyReading\">\n                      Currently Reading\n                    </option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">Remove</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"book-title\">The Hobbit</div>\n              <div className=\"book-authors\">J.R.R. Tolkien</div>\n            </div>\n          </li> */}\n          <li>test1\n            <div>\n              {console.log(books[0])}\n              {books[0][author]}\n            </div>\n          </li>\n        </ol>\n      </div>\n    </div>\n  )\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}