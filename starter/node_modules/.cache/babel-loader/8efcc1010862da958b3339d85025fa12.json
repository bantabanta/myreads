{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const bookshelves = [{\n    key: 'currentlyReading',\n    name: 'Currently Reading'\n  }, {\n    key: 'wantToRead',\n    name: 'Want to Read'\n  }, {\n    key: 'read',\n    name: 'Read'\n  }]; // load books at first DOM render:\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const updateShelf = (book, shelf) => {\n    const update = async () => {\n      const res = await BooksAPI.update(book, shelf);\n      setBooks(books.concat(res));\n    }; //invoke to update the book\n\n\n    update();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListBooks, {\n        books: books,\n        onUpdateBook: updateShelf,\n        bookshelves: bookshelves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {\n        books: books,\n        onUpdateBook: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js"],"names":["BooksAPI","Route","Routes","useState","useEffect","ListBooks","Search","App","books","setBooks","bookshelves","key","name","getBooks","res","getAll","updateShelf","book","shelf","update","concat"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,WAAW,GAAG,CAClB;AAAEC,IAAAA,GAAG,EAAE,kBAAP;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GADkB,EAElB;AAAED,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAFkB,EAGlB;AAAED,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAHkB,CAApB,CAHa,CASb;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMd,QAAQ,CAACe,MAAT,EAAlB;AACAN,MAAAA,QAAQ,CAACK,GAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,UAAMC,MAAM,GAAG,YAAY;AACzB,YAAML,GAAG,GAAG,MAAMd,QAAQ,CAACmB,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,CAAlB;AACAT,MAAAA,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAaN,GAAb,CAAD,CAAR;AACD,KAHD,CADmC,CAKnC;;;AACAK,IAAAA,MAAM;AAEP,GARD;;AAUA,sBAEE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AACE,MAAA,OAAO,eAAE,QAAC,SAAD;AACP,QAAA,KAAK,EAAEX,KADA;AAEP,QAAA,YAAY,EAAEQ,WAFP;AAGP,QAAA,WAAW,EAAEN;AAHN;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AACE,MAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEF,KAAf;AAAsB,QAAA,YAAY,EAAEQ;AAApC;AAAA;AAAA;AAAA;AAAA;AADX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAeD;;GA3CQT,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  const bookshelves = [\n    { key: 'currentlyReading', name: 'Currently Reading' },\n    { key: 'wantToRead', name: 'Want to Read' },\n    { key: 'read', name: 'Read' }\n  ];\n\n  // load books at first DOM render:\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    }\n    getBooks();\n  }, [])\n\n  const updateShelf = (book, shelf) => {\n    const update = async () => {\n      const res = await BooksAPI.update(book, shelf);\n      setBooks(books.concat(res));\n    }\n    //invoke to update the book\n    update();\n\n  };\n\n  return (\n\n    <Routes>\n      <Route exact path=\"/\"\n        element={<ListBooks\n          books={books}\n          onUpdateBook={updateShelf}\n          bookshelves={bookshelves} />}\n      />\n      <Route path=\"/Search\"\n        element={<Search books={books} onUpdateBook={updateShelf} />}\n      />\n    </Routes>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}