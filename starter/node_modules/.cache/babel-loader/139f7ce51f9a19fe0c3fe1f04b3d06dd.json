{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchResults.js\";\nimport BookView from './BookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = ({\n  books,\n  queryBooks,\n  onUpdateShelf\n}) => {\n  // Create a new array of books to show with corresponding shelf:\n  const updatedQuery = queryBooks.map(queryBook => {\n    books.map(book => {\n      if (book.id === queryBook.id) {\n        queryBook.shelf = book.shelf;\n      }\n\n      return book;\n    });\n\n    if (!queryBook.shelf) {\n      queryBook.shelf = 'none';\n    }\n\n    ;\n    return queryBook;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"showing-books\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"books-grid\",\n      children: updatedQuery.map(queryBook => /*#__PURE__*/_jsxDEV(BookView, {\n        currentBook: queryBook,\n        onUpdateShelf: onUpdateShelf\n      }, queryBook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchResults;\nexport default SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchResults.js"],"names":["BookView","SearchResults","books","queryBooks","onUpdateShelf","updatedQuery","map","queryBook","book","id","shelf"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAyC;AAE7D;AACA,QAAMC,YAAY,GAAGF,UAAU,CAACG,GAAX,CAAeC,SAAS,IAAI;AAC/CL,IAAAA,KAAK,CAACI,GAAN,CAAUE,IAAI,IAAI;AAChB,UAAIA,IAAI,CAACC,EAAL,KAAYF,SAAS,CAACE,EAA1B,EAA8B;AAC5BF,QAAAA,SAAS,CAACG,KAAV,GAAkBF,IAAI,CAACE,KAAvB;AACD;;AACD,aAAOF,IAAP;AACD,KALD;;AAOA,QAAI,CAACD,SAAS,CAACG,KAAf,EAAsB;AACpBH,MAAAA,SAAS,CAACG,KAAV,GAAkB,MAAlB;AACD;;AAAA;AACD,WAAOH,SAAP;AACD,GAZoB,CAArB;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGF,YAAY,CAACC,GAAb,CAAiBC,SAAS,iBACzB,QAAC,QAAD;AAEE,QAAA,WAAW,EAAEA,SAFf;AAGE,QAAA,aAAa,EAAEH;AAHjB,SACOG,SAAS,CAACE,EADjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7BD;;KAAMR,a;AA+BN,eAAeA,aAAf","sourcesContent":["import BookView from './BookView';\n\nconst SearchResults = ({books, queryBooks, onUpdateShelf }) => {\n\n  // Create a new array of books to show with corresponding shelf:\n  const updatedQuery = queryBooks.map(queryBook => {\n    books.map(book => {\n      if (book.id === queryBook.id) {\n        queryBook.shelf = book.shelf;\n      }\n      return book;\n    }\n    );\n    if (!queryBook.shelf) {\n      queryBook.shelf = 'none'\n    };\n    return queryBook;\n  });\n\n  return (\n    <div className=\"showing-books\">\n      <ol className=\"books-grid\">\n        {updatedQuery.map(queryBook =>\n          <BookView\n            key={queryBook.id}\n            currentBook={queryBook}\n            onUpdateShelf={onUpdateShelf} />\n        )}\n      </ol>\n    </div>\n  )\n}\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}