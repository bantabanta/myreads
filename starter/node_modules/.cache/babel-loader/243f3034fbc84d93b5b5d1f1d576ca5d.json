{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddBook = ({\n  books\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState(BooksAPI.search('react'));\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  const showBooks = query => {\n    const show = async () => {\n      const res = await BooksAPI.search(query.trim()); //concat the API response (new contact) to contacts\n\n      setQueryBooks(books.concat(res));\n    }; //invoke to add the contact\n\n\n    show(); // take user back to List page\n\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-contacts\",\n          type: \"text\",\n          placeholder: \"Search books by Title or Author...\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: query !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showing-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Showing \", 'books.length', \" results for '\", query, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearQuery(),\n          children: \"Clear Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBook, \"wBtkANAaerfRx8PxjqFVu+sTr3k=\");\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/AddBook.js"],"names":["Link","useState","BooksAPI","AddBook","books","query","setQuery","queryBooks","setQueryBooks","search","updateQuery","trim","clearQuery","showBooks","show","res","concat","navigate","event","target","value"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACC,QAAQ,CAACO,MAAT,CAAgB,OAAhB,CAAD,CAA5C;;AAEA,QAAMC,WAAW,GAAIL,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAK,CAACM,IAAN,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAIR,KAAD,IAAW;AAC3B,UAAMS,IAAI,GAAG,YAAY;AACvB,YAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACO,MAAT,CAAgBJ,KAAK,CAACM,IAAN,EAAhB,CAAlB,CADuB,CAEvB;;AACAH,MAAAA,aAAa,CAACJ,KAAK,CAACY,MAAN,CAAaD,GAAb,CAAD,CAAb;AACD,KAJD,CAD2B,CAM3B;;;AACAD,IAAAA,IAAI,GAPuB,CAQ3B;;AACAG,IAAAA,QAAQ,CAAC,GAAD,CAAR;AAED,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,oCAHd;AAIE,UAAA,KAAK,EAAEZ,KAJT;AAKE,UAAA,QAAQ,EAAGa,KAAD,IAAWR,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAEIf,KAAK,KAAK,EAAV,iBACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,iCACW,cADX,oBACyCA,KADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAMO,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA3DD;;GAAMT,O;;KAAAA,O;AA6DN,eAAeA,OAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nconst AddBook = ({books}) => {\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState(BooksAPI.search('react'));\n\n  const updateQuery = (query) => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  const showBooks = (query) => {\n    const show = async () => {\n      const res = await BooksAPI.search(query.trim());\n      //concat the API response (new contact) to contacts\n      setQueryBooks(books.concat(res));\n    }\n    //invoke to add the contact\n    show();\n    // take user back to List page\n    navigate(\"/\");\n\n  };\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\" >\n          Back to Home\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            className=\"search-contacts\"\n            type=\"text\"\n            placeholder=\"Search books by Title or Author...\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"search-books-results\">\n        {\n          query !== '' && (\n            <div className=\"showing-books\">\n              <span>\n                Showing {'books.length'} results for '{query}'\n              </span>\n              <button onClick={() => clearQuery()}>Clear Search</button>\n            </div>\n          )\n        }\n\n        {/* {queryBooks} */}\n\n      </div>\n    </div>\n  )\n};\n\nexport default AddBook;\n"]},"metadata":{},"sourceType":"module"}