{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  books\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState([]);\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  const showBooks = query => {\n    const show = async () => {\n      const res = await BooksAPI.search(query);\n      console.log(`showbooks has ${typeof res} items`);\n    };\n\n    show();\n  };\n\n  const showingBooks = query === \"\" ? 'test' : showBooks(query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-contacts\",\n          type: \"text\",\n          placeholder: \"Search books by Title or Author...\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [query !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showing-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Showing \", 'books.length', \" results for '\", query, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => clearQuery(),\n          children: \"Clear Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showingBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), console.log(typeof books)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"TyNTIyF/qrPbRQ5MSHdGXo2x384=\");\n\n_c = Search;\nSearch.propTypes = {\n  books: PropTypes.array.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/Search.js"],"names":["Link","useState","BooksAPI","PropTypes","Search","books","query","setQuery","queryBooks","setQueryBooks","updateQuery","trim","clearQuery","showBooks","show","res","search","console","log","showingBooks","event","target","value","propTypes","array","isRequired"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,WAAW,GAAIJ,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAK,CAACK,IAAN,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,SAAS,GAAIP,KAAD,IAAW;AAC3B,UAAMQ,IAAI,GAAG,YAAY;AACvB,YAAMC,GAAG,GAAG,MAAMb,QAAQ,CAACc,MAAT,CAAgBV,KAAhB,CAAlB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgB,OAAOH,GAAK,QAAzC;AACD,KAHD;;AAIAD,IAAAA,IAAI;AACL,GAND;;AAQA,QAAMK,YAAY,GAClBb,KAAK,KAAK,EAAV,GACI,MADJ,GAEIO,SAAS,CAACP,KAAD,CAHb;AAKA,sBAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,oCAHd;AAIE,UAAA,KAAK,EAAEA,KAJT;AAKE,UAAA,QAAQ,EAAGc,KAAD,IAAWV,WAAW,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBAEIhB,KAAK,KAAK,EAAV,iBACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,iCACW,cADX,oBACyCA,KADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAMM,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,eAWE;AAAA,kBAAMO;AAAN;AAAA;AAAA;AAAA;AAAA,cAXF,EAaGF,OAAO,CAACC,GAAR,CAAY,OAAOb,KAAnB,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAqCD,CA9DD;;GAAMD,M;;KAAAA,M;AAgENA,MAAM,CAACmB,SAAP,GAAmB;AACjBlB,EAAAA,KAAK,EAAEF,SAAS,CAACqB,KAAV,CAAgBC;AADN,CAAnB;AAIA,eAAerB,MAAf","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport PropTypes from 'prop-types';\n\nconst Search = ({books}) => {\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState([]);\n\n  const updateQuery = (query) => {\n    setQuery(query.trim());\n  };\n\n  const clearQuery = () => {\n    updateQuery('');\n  };\n\n  const showBooks = (query) => {\n    const show = async () => {\n      const res = await BooksAPI.search(query);\n      console.log(`showbooks has ${typeof(res)} items`)\n    }\n    show();\n  };\n\n  const showingBooks =\n  query === \"\"\n    ? 'test'\n    : showBooks(query);\n\n  return (\n\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\" >\n          Back to Home\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            className=\"search-contacts\"\n            type=\"text\"\n            placeholder=\"Search books by Title or Author...\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"search-books-results\">\n        {\n          query !== '' && (\n            <div className=\"showing-books\">\n              <span>\n                Showing {'books.length'} results for '{query}'\n              </span>\n              <button onClick={() => clearQuery()}>Clear Search</button>\n            </div>\n          )\n        }\n        <div>{showingBooks}</div>\n\n        {console.log(typeof(books))}\n        {/* This is returning object? */}\n\n      </div>\n    </div>\n  )\n};\n\nSearch.propTypes = {\n  books: PropTypes.array.isRequired\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}