{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport * as BooksAPI from \"../BooksAPI\";\nimport SearchResults from './SearchResults';\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  books,\n  onUpdateShelf\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState([]);\n\n  const updateQuery = query => {\n    setQuery(query);\n    fetchQueryBooks(query);\n  };\n\n  const fetchQueryBooks = query => {\n    if (query.length > 0) {\n      const setShow = async () => {\n        const res = await BooksAPI.search(query);\n        res.error ? setQueryBooks([]) : setQueryBooks(res);\n      };\n\n      setShow();\n    } else {\n      setQueryBooks([]);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-contacts\",\n          type: \"text\",\n          placeholder: \"Search books by Title or Author...\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: query !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [queryBooks.length, \" results for '\", query, \"'...\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateQuery(''),\n            children: \"clear search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          query: query,\n          books: books,\n          queryBooks: queryBooks,\n          onUpdateShelf: onUpdateShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBooks, \"TyNTIyF/qrPbRQ5MSHdGXo2x384=\");\n\n_c = SearchBooks;\nSearchBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  onUpdateShelf: PropTypes.func.isRequired\n};\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchBooks.js"],"names":["BooksAPI","SearchResults","Link","useState","PropTypes","SearchBooks","books","onUpdateShelf","query","setQuery","queryBooks","setQueryBooks","updateQuery","fetchQueryBooks","length","setShow","res","search","error","event","target","value","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,WAAW,GAAIJ,KAAD,IAAW;AAC7BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,IAAAA,eAAe,CAACL,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMK,eAAe,GAAIL,KAAD,IAAW;AACjC,QAAIA,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAMC,OAAO,GAAG,YAAY;AAC1B,cAAMC,GAAG,GAAG,MAAMhB,QAAQ,CAACiB,MAAT,CAAgBT,KAAhB,CAAlB;AACAQ,QAAAA,GAAG,CAACE,KAAJ,GAAYP,aAAa,CAAC,EAAD,CAAzB,GAAgCA,aAAa,CAACK,GAAD,CAA7C;AACD,OAHD;;AAIAD,MAAAA,OAAO;AACR,KAND,MAMO;AACLJ,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AAAA;AACF,GAVD;;AAYA,sBAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,oCAHd;AAIE,UAAA,KAAK,EAAEH,KAJT;AAKE,UAAA,QAAQ,EAAGW,KAAD,IAAWP,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAA,gBAEIb,KAAK,KAAK,EAAV,iBACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAA,qBACGE,UAAU,CAACI,MADd,oBACoCN,KADpC,uBAEE;AAAQ,YAAA,OAAO,EAAE,MAAMI,WAAW,CAAC,EAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKG,QAAC,aAAD;AACC,UAAA,KAAK,EAAEJ,KADR;AAEC,UAAA,KAAK,EAAEF,KAFR;AAGC,UAAA,UAAU,EAAEI,UAHb;AAIC,UAAA,aAAa,EAAEH;AAJhB;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAmCD,CAxDD;;GAAMF,W;;KAAAA,W;AA0DNA,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,KAAK,EAAEF,SAAS,CAACmB,KAAV,CAAgBC,UADD;AAEtBjB,EAAAA,aAAa,EAAEH,SAAS,CAACqB,IAAV,CAAeD;AAFR,CAAxB;AAKA,eAAenB,WAAf","sourcesContent":["import * as BooksAPI from \"../BooksAPI\";\nimport SearchResults from './SearchResults';\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst SearchBooks = ({ books, onUpdateShelf }) => {\n  const [query, setQuery] = useState('');\n  const [queryBooks, setQueryBooks] = useState([]);\n\n  const updateQuery = (query) => {\n    setQuery(query);\n    fetchQueryBooks(query);\n  };\n\n  const fetchQueryBooks = (query) => {\n    if (query.length > 0) {\n      const setShow = async () => {\n        const res = await BooksAPI.search(query);\n        res.error ? setQueryBooks([]) : setQueryBooks(res)\n      };\n      setShow();\n    } else {\n      setQueryBooks([]);\n    };\n  };\n\n  return (\n\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\" >\n          Back to Home\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            className=\"search-contacts\"\n            type=\"text\"\n            placeholder=\"Search books by Title or Author...\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      <div>\n        {\n          query !== '' && (\n            <div className=\"search-books-results\">\n              <span>\n                {queryBooks.length} results for '{query}'...\n                <button onClick={() => updateQuery('')}>clear search</button>\n              </span>\n              {<SearchResults\n                query={query}\n                books={books}\n                queryBooks={queryBooks}\n                onUpdateShelf={onUpdateShelf} />}\n            </div>\n          )}\n      </div>\n    </div>\n  )\n};\n\nSearchBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  onUpdateShelf: PropTypes.func.isRequired\n}\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}