{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchResults.js\";\nimport BookView from './BookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResults = ({\n  query,\n  queryBooks,\n  updateQuery,\n  updatedQuery,\n  onUpdateShelf\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: query !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showing-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Showing \", queryBooks.length, \" results for '\", query, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateQuery(''),\n          children: \"Clear Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: updatedQuery.map(queryBook => /*#__PURE__*/_jsxDEV(BookView, {\n          currentBook: queryBook,\n          onUpdateShelf: onUpdateShelf\n        }, queryBook.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this)\n  }, \"SearchResults\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchResults;\nexport default SearchResults; //need: query, queryBooks, updateQuery, updatedQuery, onUpdateShelf\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/SearchResults.js"],"names":["BookView","SearchResults","query","queryBooks","updateQuery","updatedQuery","onUpdateShelf","length","map","queryBook","id"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,WAApB;AAAiCC,EAAAA,YAAjC;AAA+CC,EAAAA;AAA/C,CAAD,KAAmE;AACvF,sBAEE;AAAA,cAEIJ,KAAK,KAAK,EAAV,iBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAA,iCACWC,UAAU,CAACI,MADtB,oBAC4CL,KAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAME,WAAW,CAAC,EAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGC,YAAY,CAACG,GAAb,CAAiBC,SAAS,iBACzB,QAAC,QAAD;AAEE,UAAA,WAAW,EAAEA,SAFf;AAGE,UAAA,aAAa,EAAEH;AAHjB,WACOG,SAAS,CAACC,EADjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHN,KAAS,eAAT;AAAA;AAAA;AAAA;AAAA,UAFF;AAwBD,CAzBD;;KAAMT,a;AA2BN,eAAeA,aAAf,C,CACA","sourcesContent":["import BookView from './BookView';\n\nconst SearchResults = ({query, queryBooks, updateQuery, updatedQuery, onUpdateShelf}) => {\n  return (\n\n    <div key=\"SearchResults\">\n      {\n        query !== '' && (\n          <div className=\"search-books-results\">\n            <div className=\"showing-books\">\n              <span>\n                Showing {queryBooks.length} results for '{query}'\n              </span>\n              <button onClick={() => updateQuery('')}>Clear Search</button>\n            </div>\n            <ol className=\"books-grid\">\n              {updatedQuery.map(queryBook =>\n                <BookView\n                  key={queryBook.id}\n                  currentBook={queryBook}\n                  onUpdateShelf={onUpdateShelf} />\n              )}\n            </ol>\n          </div>\n        )}\n    </div>\n  )\n}\n\nexport default SearchResults;\n//need: query, queryBooks, updateQuery, updatedQuery, onUpdateShelf\n"]},"metadata":{},"sourceType":"module"}