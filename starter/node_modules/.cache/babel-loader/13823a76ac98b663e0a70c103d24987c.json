{"ast":null,"code":"var _jsxFileName = \"/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]); // load books from API on first DOM render:\n\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []); // figure out live refresh of data\n\n  const updateShelf = (book, shelf) => {\n    const setShelf = async () => {\n      const res = await BooksAPI.update(book, shelf);\n      book.shelf = res;\n    };\n\n    if (shelf === 'none') {\n      setBooks(books.filter(b => b.id !== book.id)); // take out the 'none' book\n    } else {\n      setShelf();\n    } // setShelf();\n    // setBooks(books.concat(book));\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ListBooks, {\n        books: books,\n        onUpdateShelf: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Search\",\n      element: /*#__PURE__*/_jsxDEV(Search, {\n        books: books,\n        onUpdateShelf: updateShelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/timbanta/code/udacity-react/myreads/starter/src/components/App.js"],"names":["BooksAPI","ListBooks","Search","Route","Routes","useState","useEffect","App","books","setBooks","getBooks","res","getAll","updateShelf","book","shelf","setShelf","update","filter","b","id"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CADa,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,MAAT,EAAlB;AACAH,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT,CAJa,CAYb;;AACA,QAAMG,WAAW,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAML,GAAG,GAAG,MAAMX,QAAQ,CAACiB,MAAT,CAAgBH,IAAhB,EAAsBC,KAAtB,CAAlB;AACAD,MAAAA,IAAI,CAACC,KAAL,GAAaJ,GAAb;AACD,KAHD;;AAIA,QAAII,KAAK,KAAK,MAAd,EAAsB;AACpBN,MAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,IAAI,CAACM,EAAhC,CAAD,CAAR,CADoB,CAC0B;AAC/C,KAFD,MAEO;AACLJ,MAAAA,QAAQ;AACT,KATkC,CAUnC;AACA;;AACD,GAZD;;AAcE,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AACE,MAAA,OAAO,eACL,QAAC,SAAD;AACE,QAAA,KAAK,EAAER,KADT;AAEE,QAAA,aAAa,EAAEK;AAFjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AACE,MAAA,OAAO,eACL,QAAC,MAAD;AACE,QAAA,KAAK,EAAEL,KADT;AAEE,QAAA,aAAa,EAAEK;AAFjB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7CMN,G;;KAAAA,G;AA+CP,eAAeA,GAAf","sourcesContent":["import \"../App.css\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport ListBooks from \"./ListBooks\";\nimport Search from \"./Search\";\nimport { Route, Routes } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  // load books from API on first DOM render:\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    }\n    getBooks();\n  }, [])\n\n  // figure out live refresh of data\n  const updateShelf = (book, shelf) => {\n    const setShelf = async () => {\n      const res = await BooksAPI.update(book, shelf);\n      book.shelf = res;\n    };\n    if (shelf === 'none') {\n      setBooks(books.filter(b => b.id !== book.id)) // take out the 'none' book\n    } else {\n      setShelf();\n    }\n    // setShelf();\n    // setBooks(books.concat(book));\n  };\n\n    return (\n      <Routes>\n        <Route exact path=\"/\"\n          element={\n            <ListBooks\n              books={books}\n              onUpdateShelf={updateShelf}\n            />}\n        />\n        <Route path=\"/Search\"\n          element={\n            <Search\n              books={books}\n              onUpdateShelf={updateShelf}\n            />}\n        />\n      </Routes>\n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}